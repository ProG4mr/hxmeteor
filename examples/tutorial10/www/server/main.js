// Generated by Haxe 3.4.0
(function () { "use strict";
var Server = function() { };
Server.main = function() {
	Shared.init();
	if(Meteor.isServer) {
		Meteor.publish("tasks",function() {
			return model_Tasks.collection.find({ '$or' : [{ 'private' : { '$ne' : true}},{ 'owner' : this.userId}]});
		});
	}
	Meteor.methods({ 'tasks.insert' : function(text) {
		check(text,String);
		if(this.userId == null) {
			throw new Meteor.Error("not-authorized");
		}
		model_Tasks.collection.insert({ text : text, createdAt : new Date(), owner : Meteor.userId(), username : Meteor.users.findOne(this.userId).username});
	}, 'tasks.remove' : function(taskId) {
		check(taskId,String);
		model_Tasks.collection.remove(taskId);
	}, 'tasks.setChecked' : function(taskId1,setChecked) {
		check(taskId1,String);
		check(setChecked,Bool);
		model_Tasks.collection.update(taskId1,{ '$set' : { checked : setChecked}});
	}, 'tasks.setPrivate' : function(taskId2,setToPrivate) {
		check(taskId2,String);
		check(setToPrivate,Bool);
		if(model_Tasks.collection.findOne(taskId2).owner != this.userId) {
			throw new Meteor.Error("not-authorized");
		}
		model_Tasks.collection.update(taskId2,{ '$set' : { 'private' : setToPrivate}});
	}});
};
var Shared = function() { };
Shared.init = function() {
	model_Tasks.init();
};
var model_Tasks = function() { };
model_Tasks.init = function() {
	model_Tasks.collection = new Mongo.Collection("Tasks");
};
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
Server.main();
})();
